---
import { Debug } from "astro/components";

import i18next, { t } from "i18next";

import { dateTimeFormatter, getIsValidDate } from "@utils/formatters";

import BaseLayout from "@layouts/Base.astro";
import BaseContainer from "@components/base/BaseContainer.astro";
import BaseBreadcrumbs from "@components/base/BaseBreadcrumbs.astro";
import DetailsSection from "@components/sections/DetailsSection.astro";
import BikesCard from "@components/cards/BikesCard.astro";
import BikesList from "@components/bikes/BikesList.astro";

import type { Report } from "@utils/directus";

import config from "@utils/config";
import SingleReport from "@models/report";
import listing from "@models/listing";

const { id } = Astro.params;

if (!id && isNaN(id)) {
  return await config.http404();
}

// const report = await SingleReport(+id);

const [report, otherReports] = await Promise.all([
  SingleReport(+id),
  listing({
    filter: {
      id: {
        _neq: id
      }
    },
    limit: 4
  })
]);

if (!report) {
  return await config.http404();
}

export type ReportDetailsDirectus = typeof report;

const higherPages = [
  {
    url: "#",
    text: "Reports"
  }
];

type StringOrNullOrUndefined = string | null | undefined;

let dateTheftHeaderFormatted = null as StringOrNullOrUndefined;

const reportTheftDate = new Date(report.theft_date);

const isValidDate = getIsValidDate(reportTheftDate);
// console.log("isValidDate: ", isValidDate);

if (report.theft_date && isValidDate) {
  dateTheftHeaderFormatted = dateTimeFormatter({
    date: reportTheftDate,
    locale: i18next.language,
    options: {
      month: "long",
      day: "numeric",
      year: "numeric",
      hour: undefined,
      minute: undefined
    }
  });
}

const currentPageName = `
${report.bike_brand_model.bike_brand.name} ${report.bike_brand_model.name} - ${dateTheftHeaderFormatted} 
`;
---

<BaseLayout title={t("test.x")} description="test" lang={i18next.language}>
  <main>
    <BaseContainer>
      <!-- <Debug data={report} /> -->
      <!-- <Debug data={report.colors} /> -->

      <BaseBreadcrumbs
        class="my-2.5 xl:my-8"
        higherPages={higherPages}
        currentPage={currentPageName}
      />
      <DetailsSection data={report} />

      {
        otherReports.length > 0 && (
          <section class="py-4 md:py-8">
            <h2 class="text-2xl font-bold md:text-3xl">Other reports</h2>

            <BikesList items={otherReports} />
          </section>
        )
      }
    </BaseContainer>
  </main>
  <!-- <div class="container mx-auto">
    <h1>
      {report?.bike_brand_model?.bike_brand.name} / {
        report?.bike_brand_model?.name
      }
    </h1>
    <img
      src=`/photos/${report.main_photo.id}/${report.main_photo.filename_download}`
    />
  </div> -->

  <!-- <Debug data={reportTheftDate} /> -->
</BaseLayout>
